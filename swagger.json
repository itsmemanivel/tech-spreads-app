{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Tech Spreads",
        "description": "REST API ",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "tech-spreads.herokuapp.com",
    "basePath": "/api_v1",
    "paths": {
        "/users": {
          "post": {
            "tags": [
              "Users"
            ],
            "description": "Create new user in system",
            "parameters": [
              {
                "name": "user",
                "in": "body",
                "description": "User that we want to create",
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            ],
            "produces": [
              "application/json"
            ],
            "responses": {
              "200": {
                "description": "New user is created",
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "get": {
            "tags": [
              "Users"
            ],
            "summary": "Get all users in system",
            "responses": {
              "200": {
                "description": "OK",
                "schema": {
                  "$ref": "#/definitions/Users"
                }
              }
            }
          }
        },"/stocks": {
          "post": {
            "tags": [
              "Stocks"
            ],
            "description": "Create new stock in system",
            "parameters": [
              {
                "name": "stock",
                "in": "body",
                "description": "Stock that we want to create",
                "schema": {
                  "$ref": "#/definitions/Stock"
                }
              }
            ],
            "produces": [
              "application/json"
            ],
            "responses": {
              "200": {
                "description": "New Stock is created",
                "schema": {
                  "$ref": "#/definitions/Stock"
                }
              }
            }
          },
          "get": {
            "tags": [
              "Stocks"
            ],
            "summary": "Get all stocks in system",
            "responses": {
              "200": {
                "description": "OK",
                "schema": {
                  "$ref": "#/definitions/Stocks"
                }
              }
            }
          }
        },
        "/user/{userId}": {
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "description": "ID of user that we want to find",
              "type": "string"
            }
          ],
          "get": {
            "tags": [
              "Users"
            ],
            "summary": "Get user with given ID",
            "responses": {
              "200": {
                "description": "User is found",
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "delete": {
            "summary": "Delete user with given ID",
            "tags": [
              "Users"
            ],
            "responses": {
              "200": {
                "description": "User is deleted",
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "put": {
            "summary": "Update user with give ID",
            "tags": [
              "Users"
            ],
            "parameters": [
              {
                "name": "user",
                "in": "body",
                "description": "User with new values of properties",
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "User is updated",
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        }
    },
    "definitions": {
        "User": {
          "required": [
            "email",
            "_id",
            "username",
            "password"
          ],
          "properties": {
            "_id": {
              "type": "string",
              "uniqueItems": true
            },
            "email": {
              "type": "string",
              "uniqueItems": true
            },
            "username": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          }
        },
        "Users": {
          "type": "array",
          "$ref": "#/definitions/User"
        },

        "Stock": {
          "required": [
            "symbl",
            "delayedBid",
            "delayedAsk",
            "delayedLast",
            "delayedOpen",
            "delayedClose",
            "delayedHigh",
            "delayedLow",
            "delayedVolume",
            "mid",
            "percentageChange",
            "shortableShares"
          ],
          "properties": {
            "_id": {
              "type": "string",
              "uniqueItems": true
            },
            "symbol": {
              "type": "string"
            },
            "exch": {
              "type": "string"
            },
            "curr": {
              "type": "string"
            },
            "prim": {
              "type": "string"
            },
            "delayedBid": {
              "type": "string"
            },
            "delayedAsk": {
              "type": "string"
            },
            "delayedLast": {
              "type": "string"
            },
            "delayedOpen": {
              "type": "string"
            },
            "delayedClose": {
              "type": "string"
            },
            "delayedHigh": {
              "type": "string"
            },
            "delayedLow": {
              "type": "string"
            },
            "delayedVolume": {
              "type": "string"
            },
            "mid": {
              "type": "string"
            },
            "percentageChange": {
              "type": "string"
            },
            "shortableShares": {
              "type": "string"
            }
          }
        },
        "Stocks": {
          "type": "array",
          "$ref": "#/definitions/Stock"
        }
    }
}

